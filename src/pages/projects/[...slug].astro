---
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../../layouts/Layout.astro';
import Header from '../../components/Header.astro';

export async function getStaticPaths() {
  const projects = await getCollection('projects');
  return projects.map((project) => ({
    params: { slug: project.slug },
    props: { project },
  }));
}

type Props = {
  project: CollectionEntry<'projects'>;
};

const { project } = Astro.props as Props;
const { Content } = await project.render();
---

<Layout title={project.data.title}>
	<Header activePage="projects" />
	
	<main class="main">
		<article class="article">
			{project.data.heroImage && (
				<img src={project.data.heroImage} alt={project.data.title} class="hero-image" />
			)}
			
			<header class="article-header">
				<h1>{project.data.title}</h1>
				{project.data.description && (
					<p class="description">{project.data.description}</p>
				)}
				<div class="meta">
					<time datetime={project.data.pubDate.toISOString()}>
						{project.data.pubDate.toLocaleDateString('en-US', {
							year: 'numeric',
							month: 'long',
							day: 'numeric'
						})}
					</time>
					{project.data.tags && (
						<div class="tags">
							{project.data.tags.map((tag: any) => (
								<span class="tag">{tag}</span>
							))}
						</div>
					)}
					{(project.data.projectUrl || project.data.githubUrl) && (
						<div class="project-links">
							{project.data.projectUrl && (
								<a href={project.data.projectUrl} target="_blank" rel="noopener noreferrer" class="project-link">
									üîó View Live Project
								</a>
							)}
							{project.data.githubUrl && (
								<a href={project.data.githubUrl} target="_blank" rel="noopener noreferrer" class="project-link github-link">
									üíª View on GitHub
								</a>
							)}
						</div>
					)}
				</div>
			</header>
			
			<div class="content">
				<Content />
			</div>
		</article>
		
		<nav class="back-nav">
			<a href="/projects" class="back-link">‚Üê Back to Projects</a>
		</nav>
	</main>
</Layout>

<style>
	.main {
		padding: 2rem;
		max-width: 800px;
		margin: 0 auto;
		min-height: calc(100vh - 160px);
	}

	.article {
		background: #fff;
		border-radius: 12px;
		overflow: hidden;
		box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
		margin-bottom: 2rem;
	}

	.hero-image {
		width: 100%;
		height: 300px;
		object-fit: cover;
		display: block;
	}

	.article-header {
		padding: 2rem;
		border-bottom: 1px solid #e0e0e0;
	}

	.article-header h1 {
		font-size: 2.5rem;
		margin-bottom: 1rem;
		color: #333;
		line-height: 1.2;
	}

	.description {
		font-size: 1.2rem;
		color: #666;
		margin-bottom: 1.5rem;
		line-height: 1.6;
	}

	.meta {
		display: flex;
		flex-direction: column;
		gap: 1rem;
		font-size: 0.9rem;
		color: #888;
	}

	.meta time {
		font-weight: 500;
		color: #555;
	}

	.tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.tag {
		background: #667eea;
		color: white;
		padding: 0.25rem 0.75rem;
		border-radius: 20px;
		font-size: 0.8rem;
		font-weight: 500;
	}

	.project-links {
		display: flex;
		gap: 1rem;
		flex-wrap: wrap;
	}

	.project-link {
		background: #667eea;
		color: white;
		padding: 0.75rem 1.5rem;
		border-radius: 8px;
		text-decoration: none;
		font-size: 0.9rem;
		font-weight: 500;
		transition: all 0.3s ease;
		display: inline-flex;
		align-items: center;
		gap: 0.5rem;
	}

	.project-link:hover {
		background: #5a67d8;
		transform: translateY(-2px);
	}

	.github-link {
		background: #333;
	}

	.github-link:hover {
		background: #2d3748;
	}

	.content {
		padding: 2rem;
		line-height: 1.8;
		font-size: 1.1rem;
		color: #444;
	}

	.content :global(h1),
	.content :global(h2),
	.content :global(h3),
	.content :global(h4),
	.content :global(h5),
	.content :global(h6) {
		color: #333;
		margin-top: 2rem;
		margin-bottom: 1rem;
		line-height: 1.3;
	}

	.content :global(h1) {
		font-size: 2rem;
		border-bottom: 2px solid #667eea;
		padding-bottom: 0.5rem;
	}

	.content :global(h2) {
		font-size: 1.5rem;
		color: #667eea;
	}

	.content :global(h3) {
		font-size: 1.25rem;
	}

	.content :global(p) {
		margin-bottom: 1.5rem;
	}

	.content :global(ul),
	.content :global(ol) {
		margin-bottom: 1.5rem;
		padding-left: 2rem;
	}

	.content :global(li) {
		margin-bottom: 0.5rem;
	}

	.content :global(code) {
		background: #f4f4f4;
		padding: 0.2rem 0.4rem;
		border-radius: 4px;
		font-family: 'Courier New', monospace;
		font-size: 0.9em;
	}

	.content :global(pre) {
		background: #f4f4f4;
		padding: 1rem;
		border-radius: 8px;
		overflow-x: auto;
		margin-bottom: 1.5rem;
	}

	.content :global(pre code) {
		background: none;
		padding: 0;
	}

	.content :global(blockquote) {
		border-left: 4px solid #667eea;
		padding-left: 1rem;
		margin: 1.5rem 0;
		font-style: italic;
		color: #666;
	}

	.content :global(img) {
		max-width: 100%;
		height: auto;
		border-radius: 8px;
		margin: 1.5rem 0;
		box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
	}

	.back-nav {
		text-align: center;
	}

	.back-link {
		display: inline-block;
		color: #667eea;
		text-decoration: none;
		font-weight: 500;
		padding: 0.75rem 1.5rem;
		border: 2px solid #667eea;
		border-radius: 8px;
		transition: all 0.3s ease;
	}

	.back-link:hover {
		background: #667eea;
		color: white;
	}

	/* Dark theme styles */
	:global(.dark-theme) .article {
		background: rgba(255, 255, 255, 0.05);
		backdrop-filter: blur(10px);
	}

	:global(.dark-theme) .article-header {
		border-bottom-color: rgba(255, 255, 255, 0.1);
	}

	:global(.dark-theme) .article-header h1 {
		color: #f0f0f0;
	}

	:global(.dark-theme) .description {
		color: #ccc;
	}

	:global(.dark-theme) .meta time {
		color: #bbb;
	}

	:global(.dark-theme) .tag {
		background: #9f7aea;
	}

	:global(.dark-theme) .project-link {
		background: #9f7aea;
	}

	:global(.dark-theme) .project-link:hover {
		background: #8b5cf6;
	}

	:global(.dark-theme) .github-link {
		background: #4a5568;
	}

	:global(.dark-theme) .github-link:hover {
		background: #2d3748;
	}

	:global(.dark-theme) .content {
		color: #ddd;
	}

	:global(.dark-theme) .content :global(h1),
	:global(.dark-theme) .content :global(h2),
	:global(.dark-theme) .content :global(h3),
	:global(.dark-theme) .content :global(h4),
	:global(.dark-theme) .content :global(h5),
	:global(.dark-theme) .content :global(h6) {
		color: #f0f0f0;
	}

	:global(.dark-theme) .content :global(h1) {
		border-bottom-color: #9f7aea;
	}

	:global(.dark-theme) .content :global(h2) {
		color: #9f7aea;
	}

	:global(.dark-theme) .content :global(code) {
		background: rgba(255, 255, 255, 0.1);
		color: #f0f0f0;
	}

	:global(.dark-theme) .content :global(pre) {
		background: rgba(255, 255, 255, 0.1);
	}

	:global(.dark-theme) .content :global(blockquote) {
		border-left-color: #9f7aea;
		color: #bbb;
	}

	:global(.dark-theme) .back-link {
		color: #9f7aea;
		border-color: #9f7aea;
	}

	:global(.dark-theme) .back-link:hover {
		background: #9f7aea;
		color: white;
	}

	/* Mobile styles */
	@media (max-width: 768px) {
		.main {
			padding: 1rem;
		}

		.hero-image {
			height: 200px;
		}

		.article-header {
			padding: 1.5rem;
		}

		.article-header h1 {
			font-size: 2rem;
		}

		.description {
			font-size: 1.1rem;
		}

		.content {
			padding: 1.5rem;
			font-size: 1rem;
		}

		.content :global(h1) {
			font-size: 1.75rem;
		}

		.content :global(h2) {
			font-size: 1.35rem;
		}

		.meta {
			gap: 0.75rem;
		}

		.project-links {
			flex-direction: column;
			gap: 0.75rem;
		}

		.project-link {
			text-align: center;
		}
	}

	@media (max-width: 480px) {
		.main {
			padding: 0.5rem;
		}

		.hero-image {
			height: 150px;
		}

		.article-header {
			padding: 1rem;
		}

		.article-header h1 {
			font-size: 1.75rem;
		}

		.description {
			font-size: 1rem;
		}

		.content {
			padding: 1rem;
			font-size: 0.95rem;
		}

		.content :global(h1) {
			font-size: 1.5rem;
		}

		.content :global(h2) {
			font-size: 1.25rem;
		}

		.content :global(ul),
		.content :global(ol) {
			padding-left: 1.5rem;
		}

		.project-link {
			padding: 0.6rem 1rem;
			font-size: 0.85rem;
		}
	}
</style>
