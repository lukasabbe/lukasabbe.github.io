---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import { getCollection } from 'astro:content';

const blogPosts = await getCollection('blog');
const sortedPosts = blogPosts.sort((a: any, b: any) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf());
---

<Layout>
	<Header activePage="blog" />
	
	<main class="main">
		<h1>Blog</h1>
		<div class="content">
			<div class="blog-posts">
				{sortedPosts.map((post) => (
					<article class="blog-post">
						{post.data.heroImage && (
							<img src={post.data.heroImage} alt={post.data.title} class="blog-image" />
						)}
						<div class="blog-content">
							<h2><a href={`/blog/${post.slug}`}>{post.data.title}</a></h2>
							<p class="blog-description">{post.data.description}</p>
							<div class="blog-meta">
								<time datetime={post.data.pubDate.toISOString()}>
									{post.data.pubDate.toLocaleDateString('en-US', {
										year: 'numeric',
										month: 'long',
										day: 'numeric'
									})}
								</time>
								{post.data.tags && (
									<div class="blog-tags">
										{post.data.tags.map((tag) => (
											<span class="tag">{tag}</span>
										))}
									</div>
								)}
							</div>
						</div>
					</article>
				))}
			</div>
		</div>
	</main>
</Layout>

<style>
	.main {
		padding: 4rem 2rem;
		max-width: 800px;
		margin: 0 auto;
	}

	.main h1 {
		font-size: 3rem;
		margin-bottom: 2rem;
		text-align: center;
		background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
		-webkit-background-clip: text;
		-webkit-text-fill-color: transparent;
		background-clip: text;
	}

	.content {
		font-size: 1.1rem;
		line-height: 1.8;
		color: #555;
	}

	.content > p {
		margin-bottom: 2rem;
		text-align: center;
	}

	.blog-posts {
		display: flex;
		flex-direction: column;
		gap: 2rem;
	}

	.blog-post {
		background: #f8f9fa;
		padding: 2rem;
		border-radius: 12px;
		border-left: 4px solid #667eea;
		box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
	}

	.blog-post h2 {
		color: #333;
		margin-bottom: 1rem;
		font-size: 1.5rem;
	}

	.blog-post h2 a {
		color: inherit;
		text-decoration: none;
		transition: color 0.3s ease;
	}

	.blog-post h2 a:hover {
		color: #667eea;
	}

	.blog-image {
		width: 100%;
		height: 200px;
		object-fit: cover;
		border-radius: 8px;
		margin-bottom: 1rem;
	}

	.blog-content {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
	}

	.blog-description {
		color: #666;
		margin: 0;
		margin-bottom: 1rem;
	}

	.blog-meta {
		display: flex;
		flex-direction: column;
		gap: 0.5rem;
		font-size: 0.9rem;
		color: #888;
	}

	.blog-meta time {
		font-weight: 500;
	}

	.blog-tags {
		display: flex;
		flex-wrap: wrap;
		gap: 0.5rem;
	}

	.tag {
		background: #667eea;
		color: white;
		padding: 0.25rem 0.75rem;
		border-radius: 20px;
		font-size: 0.8rem;
		font-weight: 500;
	}

	/* Dark theme styles */
	:global(.dark-theme) .content {
		color: #ccc;
	}

	:global(.dark-theme) .content > p {
		color: #ccc;
	}

	:global(.dark-theme) .blog-post {
		background: rgba(255, 255, 255, 0.05);
		border-left-color: #9f7aea;
	}

	:global(.dark-theme) .blog-post h2 {
		color: #f0f0f0;
	}

	:global(.dark-theme) .blog-post h2 a:hover {
		color: #9f7aea;
	}

	:global(.dark-theme) .blog-description {
		color: #bbb;
	}

	:global(.dark-theme) .blog-meta {
		color: #999;
	}

	.blog-post p {
		color: #666;
		margin: 0;
	}

	@media (max-width: 768px) {
		.main {
			padding: 2rem 1rem;
		}
		
		.main h1 {
			font-size: 2rem;
			margin-bottom: 1.5rem;
		}
		
		.content {
			font-size: 1rem;
		}
		
		.content > p {
			margin-bottom: 1.5rem;
		}
		
		.blog-post {
			padding: 1.5rem;
		}
		
		.blog-post h2 {
			font-size: 1.3rem;
		}
	}

	@media (max-width: 480px) {
		.main {
			padding: 1.5rem 0.75rem;
		}
		
		.main h1 {
			font-size: 1.75rem;
		}
		
		.content {
			font-size: 0.95rem;
		}
		
		.blog-post {
			padding: 1rem;
		}
		
		.blog-post h2 {
			font-size: 1.2rem;
		}
	}
</style>
